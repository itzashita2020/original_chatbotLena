name: Deploy to Vercel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information (Preview)
        if: github.event_name == 'pull_request'
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./app

      - name: Build Project Artifacts (Preview)
        if: github.event_name == 'pull_request'
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./app

      - name: Deploy Project Artifacts to Vercel (Preview)
        if: github.event_name == 'pull_request'
        id: deploy-preview
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview_url=$url" >> $GITHUB_OUTPUT
        working-directory: ./app

      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: 'ðŸš€ Preview deployment ready!\n\n**URL:** ${{ steps.deploy-preview.outputs.preview_url }}'
            })

      - name: Pull Vercel Environment Information (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./app

      - name: Build Project Artifacts (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./app

      - name: Deploy Project Artifacts to Vercel (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./app

      - name: Create deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deployment_state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.name,
              deployment_id: context.payload.deployment.id,
              state: deployment_state
            });
